{
  "result": [
    {
      "scriptId": "1017",
      "url": "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/server.ts",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 0,
              "endOffset": 13428,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__awaiter",
          "ranges": [
            {
              "startOffset": 58,
              "endOffset": 693,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "adopt",
          "ranges": [
            {
              "startOffset": 109,
              "endOffset": 217,
              "count": 1
            },
            {
              "startOffset": 159,
              "endOffset": 166,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 175,
              "endOffset": 213,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 254,
              "endOffset": 689,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "fulfilled",
          "ranges": [
            {
              "startOffset": 291,
              "endOffset": 382,
              "count": 1
            },
            {
              "startOffset": 356,
              "endOffset": 380,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "rejected",
          "ranges": [
            {
              "startOffset": 391,
              "endOffset": 485,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "step",
          "ranges": [
            {
              "startOffset": 494,
              "endOffset": 604,
              "count": 2
            },
            {
              "startOffset": 530,
              "endOffset": 553,
              "count": 1
            },
            {
              "startOffset": 554,
              "endOffset": 601,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__generator",
          "ranges": [
            {
              "startOffset": 743,
              "endOffset": 2516,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "sent",
          "ranges": [
            {
              "startOffset": 800,
              "endOffset": 853,
              "count": 1
            },
            {
              "startOffset": 827,
              "endOffset": 838,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "g.<computed>",
          "ranges": [
            {
              "startOffset": 1013,
              "endOffset": 1040,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "verb",
          "ranges": [
            {
              "startOffset": 1050,
              "endOffset": 1116,
              "count": 3
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 1076,
              "endOffset": 1113,
              "count": 2
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "step",
          "ranges": [
            {
              "startOffset": 1121,
              "endOffset": 2514,
              "count": 2
            },
            {
              "startOffset": 1156,
              "endOffset": 1211,
              "count": 0
            },
            {
              "startOffset": 1229,
              "endOffset": 1257,
              "count": 1
            },
            {
              "startOffset": 1246,
              "endOffset": 1256,
              "count": 0
            },
            {
              "startOffset": 1262,
              "endOffset": 2418,
              "count": 4
            },
            {
              "startOffset": 1293,
              "endOffset": 1394,
              "count": 0
            },
            {
              "startOffset": 1395,
              "endOffset": 1426,
              "count": 0
            },
            {
              "startOffset": 1428,
              "endOffset": 1437,
              "count": 0
            },
            {
              "startOffset": 1464,
              "endOffset": 1490,
              "count": 0
            },
            {
              "startOffset": 1536,
              "endOffset": 1543,
              "count": 2
            },
            {
              "startOffset": 1544,
              "endOffset": 1566,
              "count": 2
            },
            {
              "startOffset": 1583,
              "endOffset": 1639,
              "count": 1
            },
            {
              "startOffset": 1656,
              "endOffset": 1705,
              "count": 0
            },
            {
              "startOffset": 1722,
              "endOffset": 1771,
              "count": 0
            },
            {
              "startOffset": 1788,
              "endOffset": 2297,
              "count": 1
            },
            {
              "startOffset": 1852,
              "endOffset": 1870,
              "count": 0
            },
            {
              "startOffset": 1925,
              "endOffset": 2003,
              "count": 0
            },
            {
              "startOffset": 2005,
              "endOffset": 2086,
              "count": 0
            },
            {
              "startOffset": 2088,
              "endOffset": 2166,
              "count": 0
            },
            {
              "startOffset": 2168,
              "endOffset": 2297,
              "count": 0
            },
            {
              "startOffset": 2311,
              "endOffset": 2362,
              "count": 2
            },
            {
              "startOffset": 2362,
              "endOffset": 2395,
              "count": 0
            },
            {
              "startOffset": 2395,
              "endOffset": 2396,
              "count": 2
            },
            {
              "startOffset": 2418,
              "endOffset": 2442,
              "count": 1
            },
            {
              "startOffset": 2442,
              "endOffset": 2454,
              "count": 0
            },
            {
              "startOffset": 2454,
              "endOffset": 2484,
              "count": 1
            },
            {
              "startOffset": 2485,
              "endOffset": 2493,
              "count": 0
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "__importDefault",
          "ranges": [
            {
              "startOffset": 2574,
              "endOffset": 2655,
              "count": 3
            },
            {
              "startOffset": 2626,
              "endOffset": 2631,
              "count": 1
            },
            {
              "startOffset": 2632,
              "endOffset": 2652,
              "count": 2
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 3015,
              "endOffset": 3430,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 3080,
              "endOffset": 3426,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 3145,
              "endOffset": 3422,
              "count": 2
            },
            {
              "startOffset": 3201,
              "endOffset": 3263,
              "count": 1
            },
            {
              "startOffset": 3276,
              "endOffset": 3406,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 3464,
              "endOffset": 4090,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 4202,
              "endOffset": 5204,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 5244,
              "endOffset": 5951,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        },
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 5988,
              "endOffset": 7081,
              "count": 0
            }
          ],
          "isBlockCoverage": false
        }
      ]
    },
    {
      "scriptId": "1224",
      "url": "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/db.ts",
      "functions": [
        {
          "functionName": "",
          "ranges": [
            {
              "startOffset": 0,
              "endOffset": 803,
              "count": 1
            }
          ],
          "isBlockCoverage": true
        }
      ]
    }
  ],
  "timestamp": 147448.322501,
  "source-map-cache": {
    "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/server.ts": {
      "lineLengths": [
        13,
        90,
        112,
        64,
        99,
        102,
        118,
        78,
        7,
        2,
        74,
        117,
        157,
        70,
        23,
        70,
        55,
        169,
        52,
        28,
        46,
        72,
        65,
        65,
        24,
        128,
        106,
        89,
        87,
        42,
        43,
        13,
        39,
        66,
        89,
        5,
        2,
        72,
        62,
        2,
        62,
        24,
        52,
        55,
        44,
        42,
        44,
        106,
        21,
        44,
        27,
        74,
        19,
        41,
        41,
        38,
        9,
        7,
        7,
        109,
        16,
        44,
        27,
        72,
        49,
        20,
        19,
        36,
        31,
        106,
        17,
        36,
        38,
        9,
        7,
        7,
        76,
        110,
        43,
        44,
        27,
        19,
        40,
        39,
        79,
        61,
        29,
        19,
        42,
        84,
        19,
        45,
        45,
        40,
        19,
        31,
        72,
        40,
        42,
        9,
        7,
        7,
        115,
        11,
        44,
        27,
        19,
        42,
        98,
        19,
        26,
        60,
        40,
        19,
        31,
        72,
        40,
        42,
        9,
        7,
        7,
        112,
        29,
        44,
        27,
        19,
        44,
        43,
        83,
        65,
        29,
        19,
        42,
        64,
        39,
        53,
        24,
        19,
        26,
        60,
        40,
        19,
        31,
        66,
        40,
        42,
        9,
        7,
        7,
        6344
      ],
      "data": {
        "version": 3,
        "file": "/Users/joelloyd/Documents/card-app-typescript-test/backend/src/server.ts",
        "sources": [
          "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/server.ts"
        ],
        "names": [],
        "mappings": "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",
        "sourcesContent": [
          "import fastify from \"fastify\";\nimport cors from \"@fastify/cors\";\nimport { Entry } from \"@prisma/client\";\nimport Prisma from \"./db\";\n\nexport const server = fastify();\n\nserver.register(cors, {});\n\nserver.get<{ Reply: Entry[] }>(\"/get/\", async (req, reply) => {\n  const dbAllEntries = await Prisma.entry.findMany({});\n  reply.send(dbAllEntries);\n});\n\nserver.get<{ Body: Entry; Params: { id: string } }>(\n  \"/get/:id\",\n  async (req, reply) => {\n    const dbEntry = await Prisma.entry.findUnique({\n      where: { id: req.params.id },\n    });\n    if (!dbEntry) {\n      reply.status(500).send({ msg: `Error finding entry with id ${req.params.id}` });\n    }\n    reply.send(dbEntry);\n  }\n);\n\n// newEntryBody created_at value is converted to Datetime but then not used?\nserver.post<{ Body: Entry }>(\"/create/\", async (req, reply) => {\n  let newEntryBody = req.body;\n  newEntryBody.created_at\n    ? (newEntryBody.created_at = new Date(req.body.created_at))\n    : (newEntryBody.created_at = new Date())\n  try {\n    const createdEntryData = await Prisma.entry.create({ data: req.body });\n    reply.send(createdEntryData);\n  } catch {\n    reply.status(500).send({ msg: \"Error creating entry\" });\n  }\n});\n\nserver.delete<{ Params: { id: string } }>(\"/delete/:id\", async (req, reply) => {\n  try {\n    await Prisma.entry.delete({ where: { id: req.params.id } });\n    reply.send({ msg: \"Deleted successfully\" });\n  } catch {\n    reply.status(500).send({ msg: \"Error deleting entry\" });\n  }\n});\n\nserver.put<{ Params: { id: string }; Body: Entry }>(\n  \"/update/:id\",\n  async (req, reply) => {\n    let updatedEntryBody = req.body;\n    updatedEntryBody.created_at\n      ? (updatedEntryBody.created_at = new Date(req.body.created_at))\n      : (updatedEntryBody.created_at = new Date());\n    try {\n      await Prisma.entry.update({\n        data: req.body,\n        where: { id: req.params.id },\n      });\n      reply.send({ msg: \"Updated successfully\" });\n    } catch {\n      reply.status(500).send({ msg: \"Error updating\" });\n    }\n  }\n);\n\n\n"
        ],
        "sourceRoot": ""
      }
    },
    "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/db.ts": {
      "lineLengths": [
        13,
        62,
        41,
        41,
        25,
        616
      ],
      "data": {
        "version": 3,
        "file": "/Users/joelloyd/Documents/card-app-typescript-test/backend/src/db.ts",
        "sources": [
          "file:///Users/joelloyd/Documents/card-app-typescript-test/backend/src/db.ts"
        ],
        "names": [],
        "mappings": ";;AAAA,yCAA8C;AAE9C,IAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAElC,kBAAe,MAAM,CAAC",
        "sourcesContent": [
          "import { PrismaClient } from \"@prisma/client\";\n\nconst Prisma = new PrismaClient();\n\nexport default Prisma;\n"
        ],
        "sourceRoot": ""
      }
    }
  }
}
